---
source: src/tests/expr.rs
expression: "&snapshot"
---
--- Input ---
if {1;) then _
---

Some(
    Spanned(
        If {
            condition: Spanned(
                Error,
                0..12,
            ),
            then_branch: Spanned(
                Ident("_"),
                13..14,
            ),
            else_branch: None,
        },
        0..14,
    ),
)

--- Errors ---
[
    ParseError {
        span: 6..7,
        reason: ExpectedFound {
            expected: [
                CloseBrace,
                Module,
            ],
            found: Some(
                CloseParen,
            ),
        },
    },
]
---
