---
source: crates/rymx/tests/full.rs
expression: "String::from_utf8(out).unwrap()"
input_file: crates/rymx/tests/errors/many_errors.rym
---
Debug: Finished tokenizing
Const [const]
HSpace [ ]
Ident [test]
Colon [:]
HSpace [ ]
Union [union]
HSpace [ ]
BracketOpen [[]
String [\"test\"]
BracketClose []]
Ident [u8]
HSpace [ ]
Pipe [|]
HSpace [ ]
BracketOpen [[]
Float [1.0]
BracketClose []]
Ident [usihf]
HSpace [ ]
Assign [=]
HSpace [ ]
Int [0]
Semi [;]
VSpace [\n]

Error: Expected integer, found string
   ╭─[/home/simon/dev/rym/crates/rymx/tests/errors/many_errors.rym:1:20]
   │
 1 │ const test: union ["test"]u8 | [1.0]usihf = 0;
   │                    ───┬──  
   │                       ╰──── Expected integer
───╯

Error: Expected integer, found float
   ╭─[/home/simon/dev/rym/crates/rymx/tests/errors/many_errors.rym:1:33]
   │
 1 │ const test: union ["test"]u8 | [1.0]usihf = 0;
   │                                 ─┬─  
   │                                  ╰─── Expected integer
───╯

Debug: Finished parsing
Some(
    Module {
        name: "",
        constants: [
            (
                "test",
                Union(
                    [
                        Array(
                            Unknown,
                            Path(
                                Path(["u8"]),
                            ),
                        ),
                        Array(
                            Unknown,
                            Path(
                                Path(["usihf"]),
                            ),
                        ),
                    ],
                ),
                Literal(Int: 0),
            ),
        ],
        types: [],
        sub_modules: [],
    },
)


