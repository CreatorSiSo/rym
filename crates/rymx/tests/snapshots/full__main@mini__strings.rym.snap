---
source: crates/rymx/tests/full.rs
expression: diag.outputs_dump() + &diag.reports_dump()
input_file: crates/rymx/tests/mini/strings.rym
---
--- tokenize ---
Const [const]
HSpace [ ]
Ident [long]
HSpace [ ]
Assign [=]
HSpace [ ]
String [\"Hello World!\"]
VSpace [\n]
HSpace [\t]
Plus [+]
HSpace [ ]
String [\"\\\" --- \' --- \\\" --- ’ --- \\\"\"]
VSpace [\n]
HSpace [\t]
Plus [+]
HSpace [ ]
String [\'c\']
VSpace [\n]
HSpace [\t]
Plus [+]
HSpace [ ]
String [\'\\\'\']
VSpace [\n]
HSpace [\t]
Plus [+]
HSpace [ ]
String [\'invalid\']
Semi [;]
VSpace [\n]

--- parse ---
Module {
    name: "",
    constants: [
        (
            "long",
            Unkown,
            Add(
                Add(
                    Add(
                        Add(
                            Literal(String: "Hello World!"),
                            Literal(String: "\\\" --- ' --- \\\" --- ’ --- \\\""),
                        ),
                        Literal(String: "c"),
                    ),
                    Literal(String: "\\'"),
                ),
                Literal(String: "invalid"),
            ),
        ),
    ],
    types: [],
    sub_modules: [],
}

--- interpret ---
const assert = fn<native> (1)
const assert_eq = fn<native> (2)
const false = false
const fib_native = fn<native> (1)
const long = Hello World!\" --- ' --- \" --- ’ --- \"c\'invalid
const print = fn<native> (variadic)
const println = fn<native> (variadic)
const read_to_string = fn<native> (1)
const true = true

--- reports ---

