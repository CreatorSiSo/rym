---
source: crates/rymx/tests/full.rs
expression: diag.outputs_dump() + &diag.reports_dump()
input_file: crates/rymx/tests/rym_clone/main.rym
---
--- tokenize ---
Use [use]
HSpace [ ]
Ident [std]
Dot [.]
Ident [io]
Dot [.]
BraceOpen [{]
LowerSelf [self]
Comma [,]
HSpace [ ]
Ident [IoError]
BraceClose [}]
Semi [;]
VSpace [\n]
Use [use]
HSpace [ ]
Ident [package]
Dot [.]
Ident [Error]
HSpace [ ]
As [as]
HSpace [ ]
Ident [OtherError]
Semi [;]
VSpace [\n]
Use [use]
HSpace [ ]
Ident [package]
Dot [.]
Ident [prelude]
Dot [.]
Star [*]
Semi [;]
VSpace [\n\n]
DocComment [/// Combined error type]
VSpace [\n]
Const [const]
HSpace [ ]
Ident [Error]
HSpace [ ]
Assign [=]
VSpace [\n]
HSpace [\t]
Pipe [|]
HSpace [ ]
Ident [type]
HSpace [ ]
Ident [IoError]
VSpace [\n]
HSpace [\t]
Pipe [|]
HSpace [ ]
Ident [OtherError]
ParenOpen [(]
Ident [message]
Colon [:]
HSpace [ ]
Ident [String]
ParenClose [)]
Semi [;]
VSpace [\n\n]
Const [const]
HSpace [ ]
Ident [main]
HSpace [ ]
Assign [=]
HSpace [ ]
Fn [fn]
ParenOpen [(]
ParenClose [)]
HSpace [ ]
Ident [Result]
LessThan [<]
ParenOpen [(]
ParenClose [)]
Comma [,]
HSpace [ ]
Ident [Error]
GreaterThan [>]
HSpace [ ]
ThickArrow [=>]
HSpace [ ]
BraceOpen [{]
VSpace [\n]
HSpace [\t]
Comment [// TODO read cli arguments]
VSpace [\n]
BraceClose [}]
Semi [;]
VSpace [\n]

--- parse ---

--- reports ---
Error: 
   ╭─[/home/simon/dev/rym/crates/rymx/tests/rym_clone/main.rym:1:1]
   │
 1 │ use std.io.{self, IoError};
   │ ─┬─  
   │  ╰─── ExpectedFound { expected: [Const, Fn, end of input], found: Some(Use) }
───╯

