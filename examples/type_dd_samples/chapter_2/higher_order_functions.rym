
// double : Num a => a -> a
// double x = x * x

// twice : (a -> a) -> a -> a
// twice f x = f (f x)

func twice<a>(f: func(a) -> a) -> func(a) -> a {
	x -> f(f(x))
}

// func twice<A>(f: A -> A) A -> A =
// 	x -> f(f(x))

// Shape : Type
// rotate : Shape -> Shape

// quadruple : Num a => a -> a
// quadruple = twice double

// turn_around : Shape -> Shape
// turn_around = twice rotate
